{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectedTodo","setSelectTodo","className","map","todo","id","completed","classNames","title","type","onClick","TodoFilter","filterType","setFilterType","query","setQuery","value","onChange","event","target","placeholder","style","pointerEvents","length","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","setTodo","useState","selectedUser","setSelectedUser","useEffect","userId","href","email","name","App","setTodos","isLoading","setIsLoaded","getTodosList","a","todosFromServer","includeCheck","inp","toLowerCase","includes","filterTodos","filter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6e14712d.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  selectedTodo: Todo | null;\n  setSelectTodo: (value: Todo) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodo,\n  setSelectTodo,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n      <tbody>\n        {todos.map(todo => (\n          <tr\n            data-cy=\"todo\"\n            className=\"\"\n            key={todo.id}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={classNames(\n                  'has-text-success', {\n                    'has-text-danger': !todo.completed,\n                  },\n                )}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => setSelectTodo(todo)}\n              >\n                <span className=\"icon\">\n                  <i className={classNames(\n                    'far', {\n                      'fa-eye': selectedTodo?.id !== todo.id,\n                    },\n                    { 'fa-eye-slash': selectedTodo?.id === todo.id },\n                  )}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","/* eslint-disable jsx-a11y/control-has-associated-label */\n\ntype Props = {\n  filterType: string;\n  setFilterType: (str: string) => void;\n  query: string;\n  setQuery: (str: string) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  filterType,\n  setFilterType,\n  query,\n  setQuery,\n}) => {\n  const handleChangefilterType\n  = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setFilterType(event.target.value);\n  };\n\n  const handleChangeInput = (\n    event: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    setQuery(event.target.value);\n  };\n\n  return (\n    <form\n      className=\"field has-addons\"\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filterType}\n            onChange={handleChangefilterType}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleChangeInput}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {query.length !== 0 && (\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setQuery('')}\n            />\n          )}\n\n        </span>\n      </p>\n    </form>\n  );\n};\n","// import { json } from 'node:stream/consumers';\nimport { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  todo: Todo;\n  setTodo: (obj: Todo | null) => void\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  todo,\n  setTodo,\n}) => {\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(todo.userId)\n      .then(setSelectedUser);\n  }, [todo]);\n\n  const handleClick = () => {\n    setTodo(null);\n    setSelectedUser(null);\n  };\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!selectedUser ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo?.id}`}\n            </div>\n\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={handleClick}\n              aria-label=\"delete\"\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo?.completed\n                ? (\n                  <strong\n                    className=\"has-text-success\"\n                  >\n                    Done\n                  </strong>\n                )\n                : (\n                  <strong\n                    className=\"has-text-danger\"\n                  >\n                    Planned\n                  </strong>\n                )}\n\n              {' by '}\n\n              <a href={`mailto:${selectedUser.email}`}>\n                {selectedUser.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useState, useEffect } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [filterType, setFilterType] = useState('all');\n  const [query, setQuery] = useState('');\n  const [todo, setTodo] = useState<Todo | null>(null);\n  const [isLoading, setIsLoaded] = useState(false);\n\n  const getTodosList = async () => {\n    const todosFromServer = await getTodos();\n\n    setIsLoaded(true);\n    setTodos(todosFromServer);\n  };\n\n  useEffect(() => {\n    getTodosList();\n  }, []);\n\n  const includeCheck = (inp: string) => (\n    inp.toLowerCase().includes(query.toLowerCase())\n  );\n\n  const filterTodos = todos\n    .filter(({ completed, title }) => {\n      if (filterType === 'active') {\n        return !completed && includeCheck(title);\n      }\n\n      if (filterType === 'completed') {\n        return completed && includeCheck(title);\n      }\n\n      return includeCheck(title);\n    });\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                filterType={filterType}\n                setFilterType={setFilterType}\n                query={query}\n                setQuery={setQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {!isLoading\n                ? <Loader />\n                : (\n                  <TodoList\n                    todos={filterTodos}\n                    selectedTodo={todo}\n                    setSelectTodo={setTodo}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {todo?.userId && (\n        <TodoModal\n          todo={todo}\n          setTodo={setTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}